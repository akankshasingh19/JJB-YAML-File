- job:
    name: buildall_job # Name of your Job
    job_type: free_style # Optional  [free_style|multi_project|job_dsl|build_flow|pull_request_generator]
    concurrent_build: true or false
    discard_old: # Discard old builds after:
      days: 1 # Optional, number of days after which the build is deleted
      number: 2 # Optional, number of builds after which the build is deleted
      artifact_days: 3 # Optional, number of days after which the artifact is deleted
      artifact_number: 4 # Optional, number of builds after which the artifact is deleted
    throttle: # Optional, throttles concurrent jobs
      max_per_node: int
      max_total: int
      option: category or alone
      category: string # Only used if option == category
    prepare_environment:
        properties_content: string
        keep_environment: true
        keep_build: true
    parameters:
       - string:
           name: param_name
           default: default value
           description: text
    scm_provider: git # See more info on Jenkins Api Client
    scm_url: git@github.com:https://github.com/akankshasingh19/samplecode.git
    scm_branch: master
    scm_params:
      excluded_users: user
      local_branch: branch_name
      recursive_update: true
      wipe_workspace: true
      skip_tag: true # Optional, defaults to false
      excluded_regions: region
      included_regions: region
    shell_command: '. commit_build.sh'
    inject_env_vars_pre_scm:
      file: '${PARENT_WORKSPACE}/{{shared_job_settings_file}}'
    promoted_builds:
      - 'Stage Promotion'
      - 'Prod Promotion'
    hipchat:
      room: hipchatroom
      start-notify: true
    priority: # Optional
        use_priority: true # true OR false
        job_priority: 1 # Default value is -1
    builders:
      - multijob:
          name: Phase One
          projects:
            - name: first
              current-parameters: true
      - multijob: 
           name: Phase Two
           projects:
             - name: third
      - inject: build_job_info
      - shell: |
          echo 'Doing some work'
          run command1
      - maven-target:
          maven-version: Maven
          pom: MavenHelloWorldProject/pom.xml
          goals: clean compile package install test site
      - blocking_downstream:
          project: buildall_job
          data:
            - params: |
                param1
                param2
          trigger_with_no_parameters: false
          # Below is Optional, values can be SUCCESS, FAILURE, UNSTABLE, never
          fail: FAILURE # Fail this build step if the triggered build is worse or equal to
          mark_fail: SUCCESS # Mark this build as failure if the triggered build is worse or equal to
          mark_unstable: UNSTABLE # Mark this build as unstable if the triggered build is worse or equal to
      - copy_artifact:
          project: buildall_job # Name of the project
          artifacts: 'artifact.txt' # Selector for artifacts
          target_directory: 'artifacts' # Where the artifacts should go, blank for Workspace root
          filter: 'test=true' # String of filters, PARAM1=VALUE1,PARAM2=VALUE2, Optional
          fingerprint: true # Optional, true or false, defaults to true
          flatten: false # Optional, true or false, defaults to false
          optional: false # Optional, true or false, defaults to false
          selector: # Optional
            type: status # Defaults to status, options: status, saved, triggered, permalink, specific, workspace, parameter
            stable: true # Use if type = 'status', true or false
            fallback: true # Use if type = 'triggered', true or false
            id: lastBuild # Use if type = 'permalink', options: lastBuild, lastStableBuild, lastSuccessfulBuild, lastFailedBuild, lastUnstableBuild, lastUnsucceessfulBuild
            number: '123' # Use if type = 'specific', the number of the build to use
            param: 'BUILD_SELECTOR' # Use if type = 'parameter', the build parameter name
    wrappers:
      - timestamp: true
      - ansicolor: true
      - artifactory:
          url: 'https://url.com/path'
          artifactory-name: 'key'
          release-repo: release
          snapshot-repo: snapshot
          publish: 'pkg/*.gem'
          publish-build-info: true # Optional
          properties: key=value;key2=value2,value2.1
      - maven3artifactory:
          url: https://artifactory.com/artifactory
          artifactory-name: name
          release-repo: release
          snapshot-repo: snapshot
          publish-build-info: true # Optional
      - inject_env_var:
          file: 'foo.prop'
          content: |
            VAR1 = value_1
            VAR2 = value_2
      - inject_passwords:
        - name: pwd_name
          value: some_encrypted_password
      - rvm: "ruby-version@ruby-gemset"
    publishers:
      - junit_result:
          test_results: 'out/**/*.xml'
      - git:
          push-merge: true
          push-only-if-success: false
      - hipchat:
          jenkinsUrl: 'http://10.0.212.146:8080/'
          authToken: 'auth_token'
          room: 'room name'
      - coverage_result:
          report_dir: out/coverage/rcov
          total:
            healthy: 80
            unhealthy: 0
            unstable: 0
          code:
            healthy: 80
            unhealthy: 0
            unstable: 0
      - description_setter:
          regexp: See the build details at (.*)
          description: 'Build Details: <a href="\1">\1</a>'
      - downstream:
          project: project_name
          data:
            - params: |
                PARAM1=value1
                PARAM2=value2
            - file: promote-job-params
      - archive_artifact:
          artifacts: 'artifact.txt' #Artifact include string/pattern
          exclude: '' # Optional, exclude string/pattern
          latest_only: false # Optional, true or false, defaults to false
          allow_empty: false # Optional, true or false, defaults to false
      - email_notifications:
          recipients: 'test@example.com' # Whitepace-delimited list of recipients
          send_if_unstable: false # Optional, default to true
          send_to_individuals: true # Optional, default to false
      - sonar_result:
          branch: 'sonar-results-branch-name'
          maven_installation_name: 'name'
    triggers:
      - github: true
      - pollscm: '* * * * *'
    build_flow: |
      guard {
        build("job_name1", param1: params["param1"]);
      } rescue {
        build("job_name2", param1: build21.environment.get("some_var"))
      }
